generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                 String
  phone                String?
  email                String?
  logo_url             String?
  status               String?
  sector               String?
  creation_date        DateTime?              @db.Date
  location_city        String?
  description          String?
  revenue              Decimal?               @db.Decimal
  project_deck_url     String?
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  company_program      company_program[]
  entrepreneur_company entrepreneur_company[]
}

model company_program {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_id     String?   @db.Uuid
  program_id     String?   @db.Uuid
  support_type   String?
  funding_amount Int?
  funding_date   DateTime? @db.Date
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  company        company?  @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  program        program?  @relation(fields: [program_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([company_id, program_id])
}

model entrepreneur {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  last_name            String
  first_name           String
  gender               String
  phone                String
  email                String                 @unique
  photo_url            String?
  cv_url               String?
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  entrepreneur_company entrepreneur_company[]
}

model entrepreneur_company {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_id      String?       @db.Uuid
  entrepreneur_id String?       @db.Uuid
  is_leader       Boolean?      @default(false)
  created_at      DateTime?     @default(now()) @db.Timestamptz(6)
  company         company?      @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  entrepreneur    entrepreneur? @relation(fields: [entrepreneur_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([company_id, entrepreneur_id])
}

model program {
  id                     String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                   String
  objective              String?
  duration               String?
  eligibility_conditions String?
  support_type           String
  budget                 String?
  launch_date            DateTime?         @db.Date
  created_at             DateTime?         @default(now()) @db.Timestamptz(6)
  company_program        company_program[]
}
